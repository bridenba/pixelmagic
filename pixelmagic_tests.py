import unittest
from pixelmagic import *


class MyTestCase(unittest.TestCase):
    def test_find_image(self):
        pixel_list1 = [[245, 246, 241], [244, 245, 240], [253, 253, 251], [245, 246, 241], [244, 245, 240],
                      [253, 253, 251], [245, 246, 241], [244, 245, 240], [253, 253, 251]]
        expected1 = [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255],
                    [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]]
        pixel_list2 = [[21, 11, 2], [24, 14, 4], [24, 14, 5], [25, 14, 5], [25, 15, 5], [26, 16, 6],
                       [26, 16, 6], [27, 16, 7], [27, 17, 7]]
        expected2 = [[210, 210, 210], [240, 240, 240], [240, 240, 240], [250, 250, 250], [250, 250, 250],
                     [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]]
        pixel_list3 = [[51, 50, 49], [50, 50, 48], [50, 49, 47], [51, 50, 49], [50, 50, 48], [50, 49, 47],
                       [51, 50, 49], [50, 50, 48], [50, 49, 47]]
        expected3 = [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255],
                     [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]]

        decoded_image1 = find_image(pixel_list1)
        decoded_image2 = find_image(pixel_list2)
        decoded_image3 = find_image(pixel_list3)

        self.assertEqual(decoded_image1, expected1)
        self.assertEqual(decoded_image2, expected2)
        self.assertEqual(decoded_image3, expected3)

    def test_fade_image(self):
        pixel_list1 = [[245, 246, 241], [244, 245, 240], [253, 253, 251], [245, 246, 241], [244, 245, 240],
                      [253, 253, 251], [245, 246, 241], [244, 245, 240], [253, 253, 251]]
        expected1 = [[49, 49, 48], [48, 49, 48], [50, 50, 50], [49, 49, 48], [48, 49, 48], [168, 168, 167],
                    [49, 49, 48], [48, 49, 48], [84, 84, 83]]
        pixel_list2 = [[21, 11, 2], [24, 14, 4], [24, 14, 5], [25, 14, 5], [25, 15, 5], [26, 16, 6],
                       [26, 16, 6], [27, 16, 7], [27, 17, 7]]
        expected2 = [[4, 2, 0], [4, 2, 0], [4, 2, 1], [5, 2, 1], [5, 3, 1], [17, 10, 4], [5, 3, 1],
                     [5, 3, 1], [9, 5, 2]]
        pixel_list3 = [[51, 50, 49], [50, 50, 48], [50, 49, 47], [51, 50, 49], [50, 50, 48], [50, 49, 47],
                       [51, 50, 49], [50, 50, 48], [50, 49, 47]]
        expected3 = [[10, 10, 9], [10, 10, 9], [10, 9, 9], [10, 10, 9], [10, 10, 9], [33, 32, 31],
                     [10, 10, 9], [10, 10, 9], [16, 16, 15]]

        faded_image1 = fade_image(pixel_list1, 3, 2, 2, 1)
        faded_image2 = fade_image(pixel_list2, 3, 2, 2, 1)
        faded_image3 = fade_image(pixel_list3, 3, 2, 2, 1)

        self.assertEqual(faded_image1, expected1)
        self.assertEqual(faded_image2, expected2)
        self.assertEqual(faded_image3, expected3)

    def test_pixel_sep(self):
        raw_pixels1 = [245, 246, 241, 244, 245, 240, 253, 253, 251, 245, 246, 241, 244, 245, 240, 253, 253, 251, 245,
                      246, 241, 244, 245, 240, 253, 253, 251]
        expected1 = [[245, 246, 241], [244, 245, 240], [253, 253, 251], [245, 246, 241], [244, 245, 240],
                    [253, 253, 251], [245, 246, 241], [244, 245, 240], [253, 253, 251]]
        raw_pixels2 = [21, 11, 2, 24, 14, 4, 24, 14, 5, 25, 14, 5, 25, 15, 5, 26, 16, 6, 26, 16, 6, 27, 16, 7, 27,
                       17, 7]
        expected2 = [[21, 11, 2], [24, 14, 4], [24, 14, 5], [25, 14, 5], [25, 15, 5], [26, 16, 6],
                       [26, 16, 6], [27, 16, 7], [27, 17, 7]]
        raw_pixels3 = [51, 50, 49, 50, 50, 48, 50, 49, 47, 51, 50, 49, 50, 50, 48, 50, 49, 47, 51, 50, 49, 50, 50,
                       48, 50, 49, 47]
        expected3 = [[51, 50, 49], [50, 50, 48], [50, 49, 47], [51, 50, 49], [50, 50, 48], [50, 49, 47],
                       [51, 50, 49], [50, 50, 48], [50, 49, 47]]

        pixel_list1 = pixel_sep(raw_pixels1)
        pixel_list2 = pixel_sep(raw_pixels2)
        pixel_list3 = pixel_sep(raw_pixels3)

        self.assertEqual(pixel_list1, expected1)
        self.assertEqual(pixel_list2, expected2)
        self.assertEqual(pixel_list3, expected3)


if __name__ == '__main__':
    unittest.main()
